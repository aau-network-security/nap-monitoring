version: '3.2'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    container_name: es_01
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xms${ELASTICSEARCH_HEAP} -Xmx${ELASTICSEARCH_HEAP}
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk
    hostname: es01
    restart: unless-stopped



  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.6
    #image: aaunetworksecurity/kibana:v3
    #image: kibana-preserved
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
    restart: unless-stopped

  registry:
    image: docker.elastic.co/package-registry/distribution:7.17.6
    ports:
      - "8080:8080"
    networks:
      - elk
    hostname: registry
    restart: unless-stopped

#  elastic-agent:
#    image: docker.elastic.co/beats/elastic-agent:7.17.6
#    container_name: elastic-agent
#    restart: always
#    user: root # note, synthetic browser monitors require this set to `elastic-agent`
#    environment:
#      - FLEET_SERVER_ENABLE=true
#      - FLEET_SERVER_ELASTICSEARCH_HOST=http://localhost:9200
#      - FLEET_SERVER_SERVICE_TOKEN=AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL3Rva2VuLTE2NjU2ODEyNzU4MzM6b19TcUxDZzlUd2VoVlpuVGt3QVJDQQ
#      - FLEET-SERVER-POLICY=499b5aa7-d214-5b5d-838b-3cd76469844e
#      - FLEET_AGENT_ID:serverFleet
#    depends_on:
#      - elasticsearch

  wireshark:
    image: lscr.io/linuxserver/wireshark:latest
    container_name: wireshark
    cap_add:
      - NET_ADMIN
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      #volumes:
    # - /path/to/config:/config
    ports:
      - 3000:3000 #optional
    restart: unless-stopped

      #  packetbeat:
      #    image: docker.elastic.co/beats/packetbeat:7.13.2
      #    user: root
      #    command:
      #      - --strict.perms=false
      #      - setup
      #  - E output.elasticsearch.hosts=["sec03.lab.es.aau.dk:9200"]
      #    volumes:
      #      - type: bind
      #        source: ./packetbeat/packetbeat.yml
      #        target: /usr/share/packetbeat/packetbeat.yml
      #        read_only: true
      #depends_on:
      #- "elasticsearch:" { condition: service_healthy }
      # - "kibana"
      #  depends_on:
      # elasticsearch:
      # condition: service_healthy
      #    cap_add:
      #      - NET_ADMIN
      #      - NET_RAW
      #    network_mode: host

      #    environment:
    #      - ELASTICSEARCH_URL=http://sec03.lab.es.aau.dk:9200
    #    restart: on-failure




    ######NOt working--- TO BE FIXED
#  thehive:
#    image: thehiveproject/thehive:3.5.0-1
#    volumes:
#      - type: bind
#        source: ./thehive/application.conf
#        target: /etc/thehive/application.conf
#        read_only: true
#    ports:
#      - "9000:9000"
#    networks:
#      - elk
#    depends_on:
#      - elasticsearch

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch: